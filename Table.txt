SET TIME ZONE 'UTC+1';
CREATE TABLE UTENTE
(	ID_UTENTE CHAR(5) PRIMARY KEY,
	USERNAME VARCHAR(30) NOT NULL UNIQUE,
	PASSWORD VARCHAR(30) NOT NULL,
	INDIRIZZO1 VARCHAR(60),
	INDIRIZZO2 VARCHAR(60), 
	EMAIL VARCHAR(60) NOT NULL UNIQUE,
	TELEFONO VARCHAR(10) NOT NULL UNIQUE,
 	

	CHECK (LENGTH(USERNAME) >= 6 ),
 	CHECK (LENGTH(PASSWORD) >= 6 )
);


CREATE TABLE ORDINE 
(	ID_ORDINE CHAR(5) PRIMARY KEY
);

CREATE TABLE ACQUISTO
(ID_ORDINE CHAR(5),
 ID_UTENTE CHAR(5),
 PRIMARY KEY(ID_ORDINE, ID_UTENTE),
 
 FOREIGN KEY (ID_ORDINE) REFERENCES ORDINE
 	ON UPDATE CASCADE ON DELETE CASCADE,
 FOREIGN KEY (ID_UTENTE) REFERENCES UTENTE
 	ON UPDATE CASCADE ON DELETE CASCADE
	
);


CREATE TABLE AMICI
(	ID_UTENTE CHAR(5) NOT NULL,
	ID_UTENTE_AMICO CHAR(5) NOT NULL,
	PRIMARY KEY(ID_UTENTE,ID_UTENTE_AMICO),

	FOREIGN KEY(ID_UTENTE) REFERENCES UTENTE
		ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY(ID_UTENTE_AMICO) REFERENCES UTENTE
		ON UPDATE CASCADE ON DELETE CASCADE,

	CHECK(ID_UTENTE != ID_UTENTE_AMICO)
);



CREATE TABLE PAGAMENTO
(	ID_PAGAMENTO CHAR(5),
 	ID_ORDINE CHAR(5),
	IMPORTO NUMERIC(6,2) NOT NULL,
	DATA DATE NOT NULL,
	NUMERO_CARTA CHAR(16),
	DATA_SCADENZA DATE,
    	CCV NUMERIC(3),
	USERNAME_PAYPAL VARCHAR(30),
	PASSWORD_PAYPAL VARCHAR (30),
	SELETTORE_PAGAMENTO VARCHAR(20),
 	PRIMARY KEY(ID_PAGAMENTO, ID_ORDINE),
		
 	FOREIGN KEY(ID_ORDINE) REFERENCES ORDINE
	ON UPDATE CASCADE ON DELETE CASCADE,

	CHECK (IMPORTO >= 0)
);

CREATE TABLE SPEDIZIONE
(	ID_SPEDIZIONE CHAR(5), 
 	ID_ORDINE CHAR(5),
 	PRIMARY KEY(ID_SPEDIZIONE, ID_ORDINE),
 	 
 	FOREIGN KEY(ID_ORDINE) REFERENCES ORDINE
	ON UPDATE CASCADE ON DELETE CASCADE

);

CREATE TABLE CATEGORIA
(	ID_CATEGORIA CHAR(5) PRIMARY KEY,
	NOME_CATEGORIA VARCHAR (30),
	DESC_CATEGORIA VARCHAR (300)
);

CREATE TABLE MAGAZZINO
(	ID_MAGAZZINO CHAR(3) PRIMARY KEY
);

CREATE TABLE VIDEOGIOCO
(	ID_VIDEOGIOCO CHAR(5) PRIMARY KEY,
 	NOME_VIDEOGIOCO VARCHAR (30) NOT NULL UNIQUE,
 	DESCRIZIONE_BREVE VARCHAR(200),
 	DESCRIZIONE_DETTAGLIATA VARCHAR(1000),
	IMMAGINE_THUMB BOOLEAN,
	IMMAGINE_GALLERIA BOOLEAN,
 	PREZZO INTEGER NOT NULL,
	COPIE_FISICHE INTEGER,

	CHECK (COPIE_FISICHE >= 0),
	CHECK (PREZZO >= 0)
);

CREATE TABLE RIPIANO
(	ID_VIDEOGIOCO CHAR(5),
	N_RIPIANO CHAR(3),
	N_SCAFFALE CHAR(3),
	ID_MAGAZZINO CHAR(3),
	PRIMARY KEY(ID_MAGAZZINO,N_SCAFFALE,N_RIPIANO, ID_VIDEOGIOCO),
	
	FOREIGN KEY (ID_MAGAZZINO) REFERENCES MAGAZZINO
		ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (ID_VIDEOGIOCO) REFERENCES VIDEOGIOCO
		ON UPDATE CASCADE ON DELETE CASCADE
);




CREATE TABLE COMPOSIZIONE
(	ID_ORDINE CHAR(5),
	ID_VIDEOGIOCO CHAR(5),
	QUANTITA NUMERIC(2),
	PRIMARY KEY (ID_ORDINE,ID_VIDEOGIOCO),
	
	FOREIGN KEY (ID_ORDINE) REFERENCES ORDINE
		ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (ID_VIDEOGIOCO) REFERENCES VIDEOGIOCO
		ON UPDATE CASCADE ON DELETE CASCADE,

	CHECK (QUANTITA > 0)
);

CREATE TABLE RECENSIONE 
(	ID_RECENSIONE CHAR(5),
	VOTO SMALLINT,
	COMMENTO VARCHAR (500),
	ID_UTENTE CHAR(5),
	ID_VIDEOGIOCO CHAR(5),
	PRIMARY KEY (ID_VIDEOGIOCO, ID_RECENSIONE),

	FOREIGN KEY (ID_UTENTE) REFERENCES UTENTE
		ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (ID_VIDEOGIOCO) REFERENCES VIDEOGIOCO
		ON UPDATE CASCADE ON DELETE CASCADE,

	CHECK (Voto >= 1 and Voto <= 5)
);


CREATE TABLE LIBRERIA
(	ID_UTENTE CHAR(5),
	ID_VIDEOGIOCO CHAR(5),
	PRIMARY KEY (ID_UTENTE, ID_VIDEOGIOCO),
	FOREIGN KEY (ID_UTENTE) REFERENCES UTENTE
		ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (ID_VIDEOGIOCO) REFERENCES VIDEOGIOCO
		ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE TIPO_VIDEOGIOCO(
ID_VIDEOGIOCO CHAR(5),
ID_CATEGORIA CHAR(5),
PRIMARY KEY (ID_VIDEOGIOCO, ID_CATEGORIA),
	
	FOREIGN KEY (ID_VIDEOGIOCO) REFERENCES VIDEOGIOCO
		ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (ID_CATEGORIA) REFERENCES CATEGORIA
		ON UPDATE CASCADE ON DELETE CASCADE
);
